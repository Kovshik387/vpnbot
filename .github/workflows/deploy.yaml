name: Deploy (Self-hosted)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Run tests
        run: go test -v ./...

      - name: Who am I / paths
        run: |
          set -euo pipefail
          whoami
          id
          echo "systemctl path: $(command -v systemctl)"
          /usr/bin/sudo -n -l || true

      - name: Backup SQLite (optional)
        run: |
          set -euo pipefail
          [ -d /root/vpnbot/data ] && cp -r /root/vpnbot/data "/root/vpnbot/data_backup_$(date +%F_%H-%M-%S)" || true

      - name: Sync repo into /root/vpnbot (keep data/)
        run: |
          set -euo pipefail
          rsync -a --delete \
            --exclude 'data' --exclude 'data_backup*' \
            --exclude '.git' --exclude 'bot' \
            ./ /root/vpnbot/

      - name: Build bot into /root/vpnbot
        run: |
          set -euo pipefail
          go build -o /root/vpnbot/bot cmd/api/main.go
          chmod +x /root/vpnbot/bot

      - name: Restart service (no TTY, full path)
        run: |
          set -euo pipefail
          /usr/bin/sudo -n /usr/bin/systemctl daemon-reload
          /usr/bin/sudo -n /usr/bin/systemctl restart vpnbot.service
          sleep 2
          /usr/bin/sudo -n /usr/bin/systemctl --no-pager -l status vpnbot.service

      - name: Dump service logs if failed
        if: failure()
        run: |
          set -euo pipefail
          /usr/bin/sudo -n /usr/bin/journalctl -u vpnbot.service -n 200 --no-pager || true
