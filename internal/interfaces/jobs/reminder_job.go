package jobs

import (
	"VpnBot/internal/app/usecases"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/robfig/cron/v3"
	"log"
)

type ReminderJob struct {
	uc *usecases.ReminderUsecase
	tg *tgbotapi.BotAPI
}

func NewReminderJob(uc *usecases.ReminderUsecase, tg *tgbotapi.BotAPI) *ReminderJob {
	return &ReminderJob{uc: uc, tg: tg}
}

const msg = "–ü—Ä–∏–≤–µ—Ç üëã  \n–ü–æ—Ä–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å–µ—Ä–≤–µ—Ä, —á—Ç–æ–±—ã –æ–Ω –ø—Ä–æ–¥–æ–ª–∂–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å.  \n–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: 130 —Ä—É–±–ª–µ–π üí≥"

func (job *ReminderJob) Start() {
	cr := cron.New()

	_, err := cr.AddFunc("0 20 21 * *", func() {
		u, err := job.uc.InitReminder()
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:", err)
		}

		for _, user := range u {
			_, _ = job.tg.Send(tgbotapi.NewMessage(user.Uid, msg))
		}

	})

	if err != nil {
		log.Println(err)
	}

	cr.Start()
}
