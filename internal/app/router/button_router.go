package router

import (
	"VpnBot/config"
	"VpnBot/internal/app/handlers/admin"
	"VpnBot/internal/app/handlers/user"
	"VpnBot/internal/app/usecases"
	"errors"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type CallbackHandler func(update tgbotapi.Update, bot *tgbotapi.BotAPI)

func NewCallbackRouter(userUC *usecases.UserUsecase, cdUC *usecases.CooldownUsecase, config *config.Config) map[string]CallbackHandler {
	return map[string]CallbackHandler{
		"approve:": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			err := checkCallbackPermission(update, bot, config.AdminId)
			if err != nil {
				return
			}
			admin.ApproveHandler(update, bot, userUC, config.AdminId)
		},
		"deny:": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			err := checkCallbackPermission(update, bot, config.AdminId)
			if err != nil {
				return
			}
			admin.DenyHandler(update, bot, cdUC, config.AdminId)
		},
		"request_key": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			user.GetKeyHandler(update, bot, cdUC, config.AdminId)
		},
		"block:": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			err := checkCallbackPermission(update, bot, config.AdminId)
			if err != nil {
				return
			}
			admin.BlockUserHandler(update, bot, userUC, config.AdminId)
		},
		"ping_server": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			user.PingHandler(update, bot, config.RussianUrl, config.AdminId)
		},
		"help": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			user.HelpHandler(update, bot, config.AdminId)
		},
		"subscribe": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			user.GetSubscribeHandler(update, bot, userUC)
		},
		"info": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			user.InfoHandler(update, bot)
		},
		"info_phone": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			deletePreview(update, bot)
			text := "üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n" +
				"1. –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ VPN –∫–ª–∏–µ–Ω—Ç\n" +
				"2. –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω\n" +
				"3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∏ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å\n" +
				"–ï—Å–ª–∏ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –í–æ—Ä–æ–Ω–µ–∂–µ –∏–ª–∏ –¥—Ä—É–≥–æ–º –≥–æ—Ä–æ–¥–µ, –≥–¥–µ –º–æ–≥—É—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –º–æ–∂–Ω–æ –æ–±–æ–π—Ç–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø–æ–¥–ø–∏—Å–∫—É. –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å VPN —Å –ª—É—á—à–∏–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫: —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ SUB URL –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ—ë –≤ —Ä–∞–∑–¥–µ–ª '–î–æ–±–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞'.\n" +
				"–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –∏ –≤—ã–±–æ—Ä—É –ø–æ–¥–ø–∏—Å–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ [–∑–¥–µ—Å—å](https://disk.yandex.ru/i/HT13HcKOYOQ8BQ)"

			keyboard := tgbotapi.NewInlineKeyboardMarkup(
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonURL("üì± iPhone",
						"https://apps.apple.com/ru/app/v2raytun/id6476628951"),
					tgbotapi.NewInlineKeyboardButtonURL("ü§ñ Android",
						"https://play.google.com/store/apps/details?id=com.v2raytun.android&hl=ru"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥", "help"),
				),
			)

			msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, text)
			msg.ParseMode = "Markdown"
			msg.ReplyMarkup = keyboard

			_, _ = bot.Send(msg)
		},
		"info_pc": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			deletePreview(update, bot)
			text := "üíª –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞:\n" +
				"1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ v2RayN –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫–ª–∏–µ–Ω—Ç\n" +
				"2. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n" +
				"3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å\n" +
				"–ë–æ–ª–µ–µ –≥–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ –∫–Ω–æ–ø–∫–µ"

			keyboard := tgbotapi.NewInlineKeyboardMarkup(
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonURL("V2RayN",
						"https://disk.yandex.ru/d/KmfPMvw42gMSYg"),
					tgbotapi.NewInlineKeyboardButtonURL("–ß—Ç–æ —É –≤–∞—Å –∑–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç",
						"https://disk.yandex.ru/i/fHv8u6gQ0hFKzg"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥", "help"),
				),
			)

			msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, text)
			msg.ReplyMarkup = keyboard
			_, _ = bot.Send(msg)

		},
		"info_tv": func(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
			_, _ = bot.Request(tgbotapi.NewDeleteMessage(
				update.CallbackQuery.Message.Chat.ID,
				update.CallbackQuery.Message.MessageID,
			))
			text := "üì∫ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞:\n" +
				"1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ VPN-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π v2RayTun\n" +
				"2. –ü–∏—à–∏—Ç–µ @KovshikGo"
			_, _ = bot.Send(tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, text))
		},
	}
}

func checkCallbackPermission(update tgbotapi.Update, bot *tgbotapi.BotAPI, adminId int64) error {
	if update.CallbackQuery.Message.Chat.ID != adminId {
		msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, "–£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
		_, _ = bot.Send(msg)
		return errors.New("–£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
	}
	return nil
}

func deletePreview(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
	_, _ = bot.Request(tgbotapi.NewDeleteMessage(
		update.CallbackQuery.Message.Chat.ID,
		update.CallbackQuery.Message.MessageID,
	))
}
